// Code generated by MockGen. DO NOT EDIT.
// Source: hub_repository.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	entity "github.com/doduyphat910/cubicasa-test/backend/app/domain/entity"
	gomock "github.com/golang/mock/gomock"
)

// MockHubRepository is a mock of HubRepository interface.
type MockHubRepository struct {
	ctrl     *gomock.Controller
	recorder *MockHubRepositoryMockRecorder
}

// MockHubRepositoryMockRecorder is the mock recorder for MockHubRepository.
type MockHubRepositoryMockRecorder struct {
	mock *MockHubRepository
}

// NewMockHubRepository creates a new mock instance.
func NewMockHubRepository(ctrl *gomock.Controller) *MockHubRepository {
	mock := &MockHubRepository{ctrl: ctrl}
	mock.recorder = &MockHubRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockHubRepository) EXPECT() *MockHubRepositoryMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockHubRepository) Create(ctx context.Context, hub entity.Hub) (entity.Hub, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", ctx, hub)
	ret0, _ := ret[0].(entity.Hub)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockHubRepositoryMockRecorder) Create(ctx, hub interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockHubRepository)(nil).Create), ctx, hub)
}

// GetByID mocks base method.
func (m *MockHubRepository) GetByID(ctx context.Context, id uint64) (entity.Hub, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByID", ctx, id)
	ret0, _ := ret[0].(entity.Hub)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByID indicates an expected call of GetByID.
func (mr *MockHubRepositoryMockRecorder) GetByID(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByID", reflect.TypeOf((*MockHubRepository)(nil).GetByID), ctx, id)
}
